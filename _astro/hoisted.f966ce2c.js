const h="modulepreload",E=function(a){return"/"+a},w={},y=function(u,d,n){if(!d||d.length===0)return u();const f=document.getElementsByTagName("link");return Promise.all(d.map(e=>{if(e=E(e),e in w)return;w[e]=!0;const r=e.endsWith(".css"),t=r?'[rel="stylesheet"]':"";if(!!n)for(let o=f.length-1;o>=0;o--){const c=f[o];if(c.href===e&&(!r||c.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${e}"]${t}`))return;const i=document.createElement("link");if(i.rel=r?"stylesheet":h,r||(i.as="script",i.crossOrigin=""),i.href=e,document.head.appendChild(i),r)return new Promise((o,c)=>{i.addEventListener("load",o),i.addEventListener("error",()=>c(new Error(`Unable to preload CSS for ${e}`)))})})).then(()=>u())};function k(a={}){const{immediate:u=!1,onNeedRefresh:d,onOfflineReady:n,onRegistered:f,onRegisteredSW:e,onRegisterError:r}=a;let t,g,i;const o=async(v=!0)=>{await g,await i?.()};async function c(){if("serviceWorker"in navigator){const{Workbox:v}=await y(()=>import("./workbox-window.prod.es5.295a6886.js"),[]);t=new v("/sw.js",{scope:"/",type:"classic"}),i=async()=>{await t?.messageSkipWaiting()};{let s=!1;const m=()=>{s=!0,t?.addEventListener("controlling",l=>{l.isUpdate&&window.location.reload()}),d?.()};t.addEventListener("installed",l=>{typeof l.isUpdate>"u"?typeof l.isExternal<"u"?l.isExternal?m():!s&&n?.():l.isExternal?window.location.reload():!s&&n?.():l.isUpdate||n?.()}),t.addEventListener("waiting",m),t.addEventListener("externalwaiting",m)}t.register({immediate:u}).then(s=>{e?e("/sw.js",s):f?.(s)}).catch(s=>{r?.(s)})}}return g=c(),o}k({immediate:!0,onRegisteredSW(a){console.log("SW registered: ",a)},onOfflineReady(){console.log("PWA application ready to work offline")}});
