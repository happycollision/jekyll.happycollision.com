---
import { getCollection } from "astro:content"
import Layout from "$layouts/Layout.astro"

import { shows } from "../shows"

export async function getStaticPaths() {
  function ensureArray<T>(x: T | T[]): T[] {
    return Array.isArray(x) ? x : [x]
  }
  const songList = await getCollection("songs")

  return shows.flatMap((show) => {
    let songNo = 0
    const sets = show.sets.map((songs) =>
      songs.map((song) => {
        const [slug, ...altSlugs] = ensureArray(song.slug)
        const found = songList.find((x) => x.slug === slug)
        if (!found) throw new Error(`Couldn't find song ${slug}`)

        const altsFound = altSlugs.map((alt) => {
          const altFound = songList.find((x) => x.slug === alt)
          if (!altFound)
            throw new Error(`Couldn't find alternative song ${alt}`)
          return altFound
        })

        return {
          songNo: ++songNo,
          altVersions: altsFound.map(({ slug }) => ({
            slug,
            songNo,
          })),
        }
      }),
    )

    const allSongs = sets.flat()

    const baseRoute = {
      params: { path: show.slug },
    }

    return [
      baseRoute,
      ...allSongs.flatMap((x): (typeof baseRoute)[] => {
        const { altVersions } = x

        return [
          {
            params: { path: `${show.slug}/${x.songNo}` },
          },
          ...altVersions.map((alt) => ({
            params: {
              path: `${show.slug}/${x.songNo}/alt/${alt.slug.split("_")[1]}`,
            },
          })),
        ]
      }),
    ]
  })
}
---

<Layout title="Finger on the Trigger" compact noHeader unconstrained>
  <script is:inline>
    window.location.replace("/trigger/")
  </script>
</Layout>
